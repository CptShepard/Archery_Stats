import csv
import os
import matplotlib.pyplot as plt
import matplotlib
matplotlib.use('TkAgg')

# Define the file name and field names for the CSV file
file_name = 'user_progress.csv'
field_names = ['Date', 'Time', 'Sets', 'Arrows', 'Distance', 'Total Points']

while True:
    # Prompt the user for input
    date = input("Enter the date (MM-DD): ")
    time = input("Enter the time (HH:MM): ")
    sets = int(input("Enter the number of sets: "))
    arrows = int(input("Enter the number of arrows per set: "))
    distance = float(input("Enter the distance in yards: "))
    total_points = int(input("Enter the total points earned after the session: "))

    # Add the data to a dictionary
    data = {'Date': date, 'Time': time, 'Sets': sets, 'Arrows': arrows, 'Distance': distance, 'Total Points': total_points}

    # Create the CSV file if it does not exist
    if not os.path.isfile(file_name):
        with open(file_name, 'w', newline='') as f:
            writer = csv.DictWriter(f, fieldnames=field_names)
            writer.writeheader()

    # Append the data to the CSV file
    with open(file_name, 'a', newline='') as f:
        writer = csv.DictWriter(f, fieldnames=field_names)
        writer.writerow(data)

    # Create the visualization
    with open(file_name, 'r', newline='') as f:
        reader = csv.DictReader(f)
        distances = {}
        for row in reader:
            distance = float(row['Distance'])
            total_points = int(row['Total Points'])
            if distance not in distances:
                distances[distance] = {'Dates': [], 'Points': []}
            distances[distance]['Dates'].append(row['Date'])
            distances[distance]['Points'].append(total_points)

    plt.figure(figsize=(8,6))
    for distance, data in distances.items():
        plt.plot(data['Dates'], data['Points'], marker='o', label=f'{distance:.0f}yds')
    plt.title("Total Points Earned per Session")
    plt.xlabel("Date")
    plt.ylabel("Total Points")
    plt.grid(True)
    plt.legend()
    plt.show()

    # Prompt the user if they want to continue or exit
    choice = input("Enter 'c' to continue or any other key to exit: ")
    if choice.lower() != 'c':
        break
