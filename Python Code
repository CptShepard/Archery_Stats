import csv
import os
import matplotlib
import matplotlib.pyplot as plt
matplotlib.use('TkAgg')

# Define the file name and field names for the CSV file
file_name = 'user_progress.csv'
field_names = ['Session #', 'Date', 'Score', 'Distance']

# Create the CSV file if it does not exist
if not os.path.isfile(file_name):
    with open(file_name, 'w', newline='') as f:
        writer = csv.DictWriter(f, fieldnames=field_names)
        writer.writeheader()

# Read the data from the CSV file
distances = {
    30: {'sessions': [], 'scores': []},
    40: {'sessions': [], 'scores': []},
    50: {'sessions': [], 'scores': []},
    60: {'sessions': [], 'scores': []},
    70: {'sessions': [], 'scores': []}
}

with open(file_name, 'r', newline='') as f:
    reader = csv.DictReader(f)
    for row in reader:
        distance = int(row['Distance'])
        distances[distance]['sessions'].append(int(row['Session #']))
        distances[distance]['scores'].append(int(row['Score']))

# Prompt the user for input
distance = int(input("Enter the distance in yards (30, 40, 50, 60, 70): "))
if len(distances[distance]['sessions']) == 0:
    session_num = int(input("Enter the session number (1-30): "))
else:
    last_session_num = distances[distance]['sessions'][-1]
    session_num = last_session_num + 1
    print(f"Next available session for distance {distance} is {session_num}")
date = input("Enter the date (MM-DD): ")
score = int(input("Enter the total score earned after the session (max 72): "))

# Append the data to the CSV file
with open(file_name, 'a', newline='') as f:
    writer = csv.DictWriter(f, fieldnames=field_names)
    writer.writerow({'Session #': session_num, 'Date': date, 'Score': score, 'Distance': distance})

# Plot the data for each distance
colors = ['b', 'g', 'r', 'c', 'm']
plt.figure(figsize=(8, 6))
for i, distance in enumerate(distances):
    plt.plot(distances[distance]['sessions'], distances[distance]['scores'], f"{colors[i]}o-", label=f"{distance} yds")
plt.plot(session_num, score, 'ko', label="New session")
plt.title("Archery Tracker")
plt.xlabel("Session #")
plt.ylabel("Score (out of 72)")
plt.legend()
plt.xticks(range(1, 31))
plt.yticks(range(0, 73, 5))
plt.show()
